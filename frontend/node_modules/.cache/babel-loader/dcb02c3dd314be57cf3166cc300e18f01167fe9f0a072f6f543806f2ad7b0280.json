{"ast":null,"code":"var _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport { create } from 'zustand';\nimport { persist } from 'zustand/middleware';\nimport { getFeatureAccess, shouldBypassLicensing } from '../config';\n// Função para simular validação de licença no servidor\nconst validateLicenseOnServer = async clientName => {\n  try {\n    const sessionId = 'default-session';\n    console.log('🔍 Validando licença no servidor:', {\n      sessionId,\n      clientName\n    });\n\n    // Em desenvolvimento, simular validação\n    if (shouldBypassLicensing()) {\n      console.log('🚀 Modo desenvolvimento: bypassando licenciamento');\n      const mockLicense = {\n        expiresAt: new Date(Date.now() + 365 * 24 * 60 * 60 * 1000),\n        // 1 ano\n        activatedAt: new Date(),\n        clientName: 'Mock Client',\n        sessionId,\n        companyName: 'Empresa Exemplo',\n        email: 'teste@exemplo.com',\n        licenseType: 'premium',\n        features: {\n          whatsappIntegration: true,\n          campaignAutomation: true,\n          reportGeneration: true,\n          googleCalendar: true,\n          aiAssistant: true,\n          advancedAnalytics: true,\n          contactGroups: true,\n          scheduledMessages: true,\n          voiceMessages: true\n        },\n        maxSessions: 1,\n        currentSessions: 1,\n        isActive: true\n      };\n      return {\n        isValid: true,\n        license: mockLicense\n      };\n    }\n    if (!clientName || typeof clientName !== 'string') {\n      return {\n        isValid: false,\n        error: 'Nome do cliente é obrigatório'\n      };\n    }\n    await new Promise(resolve => setTimeout(resolve, 1000));\n    let licenseType = 'trial';\n    let features = {\n      whatsappIntegration: true,\n      campaignAutomation: false,\n      reportGeneration: true,\n      googleCalendar: false,\n      aiAssistant: false,\n      advancedAnalytics: false,\n      contactGroups: false,\n      scheduledMessages: false,\n      voiceMessages: false\n    };\n    if (clientName.toLowerCase().includes('premium') || clientName.toLowerCase().includes('full')) {\n      licenseType = 'premium';\n      features = {\n        whatsappIntegration: true,\n        campaignAutomation: true,\n        reportGeneration: true,\n        googleCalendar: true,\n        aiAssistant: true,\n        advancedAnalytics: true,\n        contactGroups: true,\n        scheduledMessages: true,\n        voiceMessages: true\n      };\n    } else if (clientName.toLowerCase().includes('basic') || clientName.toLowerCase().includes('standard')) {\n      licenseType = 'basic';\n      features = {\n        whatsappIntegration: true,\n        campaignAutomation: true,\n        reportGeneration: true,\n        googleCalendar: false,\n        aiAssistant: false,\n        advancedAnalytics: false,\n        contactGroups: true,\n        scheduledMessages: true,\n        voiceMessages: false\n      };\n    } else if (clientName.toLowerCase().includes('enterprise') || clientName.toLowerCase().includes('corp')) {\n      licenseType = 'enterprise';\n      features = {\n        whatsappIntegration: true,\n        campaignAutomation: true,\n        reportGeneration: true,\n        googleCalendar: true,\n        aiAssistant: true,\n        advancedAnalytics: true,\n        contactGroups: true,\n        scheduledMessages: true,\n        voiceMessages: true\n      };\n    }\n    const license = {\n      sessionId,\n      clientName,\n      companyName: `${clientName} - Empresa`,\n      email: `${clientName.toLowerCase().replace(/\\s+/g, '.')}@exemplo.com`,\n      licenseType,\n      activatedAt: new Date(),\n      expiresAt: new Date(Date.now() + (licenseType === 'trial' ? 7 : 365) * 24 * 60 * 60 * 1000),\n      features,\n      maxSessions: 1,\n      currentSessions: 1,\n      isActive: true\n    };\n    console.log('✅ Licença validada com sucesso:', license);\n    return {\n      isValid: true,\n      license\n    };\n  } catch (error) {\n    console.error('🚨 Erro na validação da licença:', error);\n    const errorMessage = error instanceof Error ? `Erro na validação: ${error.message}` : 'Erro desconhecido na validação da licença';\n    return {\n      isValid: false,\n      error: errorMessage\n    };\n  }\n};\nexport const useLicenseStore = create()(persist((set, get) => ({\n  license: null,\n  isActivated: false,\n  isLoading: false,\n  error: null,\n  activateLicense: async (clientName, additionalInfo = {}) => {\n    set({\n      isLoading: true,\n      error: null\n    });\n    try {\n      console.log('🔍 Iniciando ativação de licença:', {\n        clientName,\n        additionalInfo\n      });\n      const result = await validateLicenseOnServer(clientName);\n      console.log('📊 Resultado da validação:', result);\n      if (result.isValid && result.license) {\n        const license = {\n          ...result.license,\n          ...additionalInfo\n        };\n        console.log('✅ Licença ativada com sucesso:', license);\n        set({\n          license,\n          isActivated: true,\n          isLoading: false,\n          error: null\n        });\n        return true;\n      } else {\n        console.log('❌ Falha na validação da licença:', result.error);\n        set({\n          license: null,\n          isActivated: false,\n          isLoading: false,\n          error: result.error || 'Falha na ativação da licença'\n        });\n        return false;\n      }\n    } catch (error) {\n      console.error('🚨 Erro interno ao ativar licença:', error);\n      console.error('Stack trace:', error instanceof Error ? error.stack : 'Erro sem stack trace');\n      const errorMessage = error instanceof Error ? `Erro interno: ${error.message}` : 'Erro interno ao ativar licença';\n      set({\n        license: null,\n        isActivated: false,\n        isLoading: false,\n        error: errorMessage\n      });\n      return false;\n    }\n  },\n  deactivateLicense: () => {\n    set({\n      license: null,\n      isActivated: false,\n      error: null\n    });\n  },\n  checkLicenseStatus: async () => {\n    const {\n      license\n    } = get();\n    if (!license) return false;\n\n    // Corrigir comparação de datas:\n    if (license.expiresAt && new Date() > new Date(license.expiresAt)) {\n      set({\n        license: {\n          ...license\n        },\n        isActivated: false,\n        error: 'Licença expirada'\n      });\n      return false;\n    }\n    return true;\n  },\n  validateFeatureAccess: feature => {\n    const {\n      license\n    } = get();\n    return getFeatureAccess(feature, license || undefined);\n  },\n  getRemainingDays: () => {\n    const {\n      license\n    } = get();\n    if (!license) return 0;\n    const now = new Date();\n    const expiry = license.expiresAt ? new Date(license.expiresAt) : undefined;\n    if (expiry) {\n      const diffTime = expiry.getTime() - now.getTime();\n      const diffDays = Math.ceil(diffTime / (1000 * 60 * 60 * 24));\n      return Math.max(0, diffDays);\n    }\n    return 0;\n  },\n  refreshLicense: async () => {\n    const {\n      license\n    } = get();\n    if (!license) return;\n    set({\n      isLoading: true\n    });\n    try {\n      const result = await validateLicenseOnServer(license.clientName || '');\n      if (result.isValid && result.license) {\n        set({\n          license: result.license,\n          isActivated: true,\n          isLoading: false,\n          error: null\n        });\n      } else {\n        set({\n          isLoading: false,\n          error: result.error || 'Falha ao atualizar licença'\n        });\n      }\n    } catch (error) {\n      set({\n        isLoading: false,\n        error: 'Erro ao atualizar licença'\n      });\n    }\n  },\n  getLicenseInfo: () => {\n    return get().license;\n  },\n  getSessionId: () => {\n    const {\n      license\n    } = get();\n    return (license === null || license === void 0 ? void 0 : license.sessionId) || null;\n  },\n  getClientName: () => {\n    const {\n      license\n    } = get();\n    return (license === null || license === void 0 ? void 0 : license.clientName) || null;\n  }\n}), {\n  name: 'spr-license-store',\n  version: 1,\n  migrate: (persistedState, version) => {\n    // Migração para versões futuras\n    if (version === 0) {\n      // Migrar da versão 0 para 1\n      return {\n        ...persistedState,\n        license: null,\n        isActivated: false\n      };\n    }\n    return persistedState;\n  }\n}));\n\n// Hook para verificar se uma funcionalidade está disponível\nexport const useFeatureAccess = feature => {\n  _s();\n  const {\n    validateFeatureAccess\n  } = useLicenseStore();\n  return validateFeatureAccess(feature);\n};\n\n// Hook para informações da licença\n_s(useFeatureAccess, \"Rrz4hgg4ntUsGXtOaMZaP3PMH50=\", false, function () {\n  return [useLicenseStore];\n});\nexport const useLicenseInfo = () => {\n  _s2();\n  const {\n    license,\n    isActivated,\n    getRemainingDays\n  } = useLicenseStore();\n  return {\n    license,\n    isActivated,\n    remainingDays: getRemainingDays(),\n    isExpired: license ? new Date() > new Date(license.expiresAt || '') : false,\n    licenseType: (license === null || license === void 0 ? void 0 : license.licenseType) || 'trial'\n  };\n};\n_s2(useLicenseInfo, \"Z/kSutDZ0+R5f4wuwjgrh0qzwWQ=\", false, function () {\n  return [useLicenseStore];\n});","map":{"version":3,"names":["create","persist","getFeatureAccess","shouldBypassLicensing","validateLicenseOnServer","clientName","sessionId","console","log","mockLicense","expiresAt","Date","now","activatedAt","companyName","email","licenseType","features","whatsappIntegration","campaignAutomation","reportGeneration","googleCalendar","aiAssistant","advancedAnalytics","contactGroups","scheduledMessages","voiceMessages","maxSessions","currentSessions","isActive","isValid","license","error","Promise","resolve","setTimeout","toLowerCase","includes","replace","errorMessage","Error","message","useLicenseStore","set","get","isActivated","isLoading","activateLicense","additionalInfo","result","stack","deactivateLicense","checkLicenseStatus","validateFeatureAccess","feature","undefined","getRemainingDays","expiry","diffTime","getTime","diffDays","Math","ceil","max","refreshLicense","getLicenseInfo","getSessionId","getClientName","name","version","migrate","persistedState","useFeatureAccess","_s","useLicenseInfo","_s2","remainingDays","isExpired"],"sources":["/home/cadu/projeto_SPR/frontend/src/store/useLicenseStore.ts"],"sourcesContent":["import { create } from 'zustand';\r\nimport { persist } from 'zustand/middleware';\r\nimport { LicenseInfo, config, getFeatureAccess, shouldBypassLicensing } from '../config';\r\n\r\ninterface LicenseStore {\r\n  // Estado da licença\r\n  license: LicenseInfo | null;\r\n  isActivated: boolean;\r\n  isLoading: boolean;\r\n  error: string | null;\r\n  \r\n  // Ações\r\n  activateLicense: (clientName: string, additionalInfo?: Partial<LicenseInfo>) => Promise<boolean>;\r\n  deactivateLicense: () => void;\r\n  checkLicenseStatus: () => Promise<boolean>;\r\n  validateFeatureAccess: (feature: string) => boolean;\r\n  getRemainingDays: () => number;\r\n  refreshLicense: () => Promise<void>;\r\n  \r\n  // Utilitários\r\n  getLicenseInfo: () => LicenseInfo | null;\r\n  getSessionId: () => string | null;\r\n  getClientName: () => string | null;\r\n}\r\n\r\n// Função para simular validação de licença no servidor\r\nconst validateLicenseOnServer = async (clientName: string): Promise<{\r\n  isValid: boolean;\r\n  license?: LicenseInfo;\r\n  error?: string;\r\n}> => {\r\n  try {\r\n    const sessionId = 'default-session';\r\n    console.log('🔍 Validando licença no servidor:', { sessionId, clientName });\r\n    \r\n    // Em desenvolvimento, simular validação\r\n    if (shouldBypassLicensing()) {\r\n      console.log('🚀 Modo desenvolvimento: bypassando licenciamento');\r\n      const mockLicense: LicenseInfo = {\r\n        expiresAt: new Date(Date.now() + 365 * 24 * 60 * 60 * 1000), // 1 ano\r\n        activatedAt: new Date(),\r\n        clientName: 'Mock Client',\r\n        sessionId,\r\n        companyName: 'Empresa Exemplo',\r\n        email: 'teste@exemplo.com',\r\n        licenseType: 'premium',\r\n        features: {\r\n          whatsappIntegration: true,\r\n          campaignAutomation: true,\r\n          reportGeneration: true,\r\n          googleCalendar: true,\r\n          aiAssistant: true,\r\n          advancedAnalytics: true,\r\n          contactGroups: true,\r\n          scheduledMessages: true,\r\n          voiceMessages: true\r\n        },\r\n        maxSessions: 1,\r\n        currentSessions: 1,\r\n        isActive: true\r\n      };\r\n      return { isValid: true, license: mockLicense };\r\n    }\r\n    if (!clientName || typeof clientName !== 'string') {\r\n      return { isValid: false, error: 'Nome do cliente é obrigatório' };\r\n    }\r\n    await new Promise(resolve => setTimeout(resolve, 1000));\r\n    let licenseType: 'trial' | 'basic' | 'premium' | 'enterprise' = 'trial';\r\n    let features = {\r\n      whatsappIntegration: true,\r\n      campaignAutomation: false,\r\n      reportGeneration: true,\r\n      googleCalendar: false,\r\n      aiAssistant: false,\r\n      advancedAnalytics: false,\r\n      contactGroups: false,\r\n      scheduledMessages: false,\r\n      voiceMessages: false\r\n    };\r\n    if (clientName.toLowerCase().includes('premium') || clientName.toLowerCase().includes('full')) {\r\n      licenseType = 'premium';\r\n      features = {\r\n        whatsappIntegration: true,\r\n        campaignAutomation: true,\r\n        reportGeneration: true,\r\n        googleCalendar: true,\r\n        aiAssistant: true,\r\n        advancedAnalytics: true,\r\n        contactGroups: true,\r\n        scheduledMessages: true,\r\n        voiceMessages: true\r\n      };\r\n    } else if (clientName.toLowerCase().includes('basic') || clientName.toLowerCase().includes('standard')) {\r\n      licenseType = 'basic';\r\n      features = {\r\n        whatsappIntegration: true,\r\n        campaignAutomation: true,\r\n        reportGeneration: true,\r\n        googleCalendar: false,\r\n        aiAssistant: false,\r\n        advancedAnalytics: false,\r\n        contactGroups: true,\r\n        scheduledMessages: true,\r\n        voiceMessages: false\r\n      };\r\n    } else if (clientName.toLowerCase().includes('enterprise') || clientName.toLowerCase().includes('corp')) {\r\n      licenseType = 'enterprise';\r\n      features = {\r\n        whatsappIntegration: true,\r\n        campaignAutomation: true,\r\n        reportGeneration: true,\r\n        googleCalendar: true,\r\n        aiAssistant: true,\r\n        advancedAnalytics: true,\r\n        contactGroups: true,\r\n        scheduledMessages: true,\r\n        voiceMessages: true\r\n      };\r\n    }\r\n    const license: LicenseInfo = {\r\n      sessionId,\r\n      clientName,\r\n      companyName: `${clientName} - Empresa`,\r\n      email: `${clientName.toLowerCase().replace(/\\s+/g, '.')}@exemplo.com`,\r\n      licenseType,\r\n      activatedAt: new Date(),\r\n      expiresAt: new Date(Date.now() + (licenseType === 'trial' ? 7 : 365) * 24 * 60 * 60 * 1000),\r\n      features,\r\n      maxSessions: 1,\r\n      currentSessions: 1,\r\n      isActive: true\r\n    };\r\n    console.log('✅ Licença validada com sucesso:', license);\r\n    return { isValid: true, license };\r\n  } catch (error) {\r\n    console.error('🚨 Erro na validação da licença:', error);\r\n    const errorMessage = error instanceof Error ? \r\n      `Erro na validação: ${error.message}` : \r\n      'Erro desconhecido na validação da licença';\r\n    return { isValid: false, error: errorMessage };\r\n  }\r\n};\r\n\r\nexport const useLicenseStore = create<LicenseStore>()(\r\n  persist(\r\n    (set, get) => ({\r\n      license: null,\r\n      isActivated: false,\r\n      isLoading: false,\r\n      error: null,\r\n\r\n      activateLicense: async (clientName: string, additionalInfo = {}) => {\r\n        set({ isLoading: true, error: null });\r\n        \r\n        try {\r\n          console.log('🔍 Iniciando ativação de licença:', { clientName, additionalInfo });\r\n          \r\n          const result = await validateLicenseOnServer(clientName);\r\n          \r\n          console.log('📊 Resultado da validação:', result);\r\n          \r\n          if (result.isValid && result.license) {\r\n            const license = {\r\n              ...result.license,\r\n              ...additionalInfo\r\n            };\r\n            \r\n            console.log('✅ Licença ativada com sucesso:', license);\r\n            \r\n            set({ \r\n              license, \r\n              isActivated: true, \r\n              isLoading: false, \r\n              error: null \r\n            });\r\n            \r\n            return true;\r\n          } else {\r\n            console.log('❌ Falha na validação da licença:', result.error);\r\n            \r\n            set({ \r\n              license: null, \r\n              isActivated: false, \r\n              isLoading: false, \r\n              error: result.error || 'Falha na ativação da licença' \r\n            });\r\n            \r\n            return false;\r\n          }\r\n        } catch (error) {\r\n          console.error('🚨 Erro interno ao ativar licença:', error);\r\n          console.error('Stack trace:', error instanceof Error ? error.stack : 'Erro sem stack trace');\r\n          \r\n          const errorMessage = error instanceof Error ? \r\n            `Erro interno: ${error.message}` : \r\n            'Erro interno ao ativar licença';\r\n            \r\n          set({ \r\n            license: null, \r\n            isActivated: false, \r\n            isLoading: false, \r\n            error: errorMessage\r\n          });\r\n          \r\n          return false;\r\n        }\r\n      },\r\n\r\n      deactivateLicense: () => {\r\n        set({ \r\n          license: null, \r\n          isActivated: false, \r\n          error: null \r\n        });\r\n      },\r\n\r\n      checkLicenseStatus: async () => {\r\n        const { license } = get();\r\n        \r\n        if (!license) return false;\r\n        \r\n        // Corrigir comparação de datas:\r\n        if (license.expiresAt && new Date() > new Date(license.expiresAt)) {\r\n          set({\r\n            license: { ...license },\r\n            isActivated: false,\r\n            error: 'Licença expirada'\r\n          });\r\n          return false;\r\n        }\r\n        \r\n        return true;\r\n      },\r\n\r\n      validateFeatureAccess: (feature: string) => {\r\n        const { license } = get();\r\n        return getFeatureAccess(feature, license || undefined);\r\n      },\r\n\r\n      getRemainingDays: () => {\r\n        const { license } = get();\r\n        \r\n        if (!license) return 0;\r\n        \r\n        const now = new Date();\r\n        const expiry = license.expiresAt ? new Date(license.expiresAt) : undefined;\r\n        if (expiry) {\r\n          const diffTime = expiry.getTime() - now.getTime();\r\n          const diffDays = Math.ceil(diffTime / (1000 * 60 * 60 * 24));\r\n          return Math.max(0, diffDays);\r\n        }\r\n        return 0;\r\n      },\r\n\r\n      refreshLicense: async () => {\r\n        const { license } = get();\r\n        \r\n        if (!license) return;\r\n        \r\n        set({ isLoading: true });\r\n        \r\n        try {\r\n          const result = await validateLicenseOnServer(license.clientName || '');\r\n          \r\n          if (result.isValid && result.license) {\r\n            set({ \r\n              license: result.license, \r\n              isActivated: true, \r\n              isLoading: false, \r\n              error: null \r\n            });\r\n          } else {\r\n            set({ \r\n              isLoading: false, \r\n              error: result.error || 'Falha ao atualizar licença' \r\n            });\r\n          }\r\n        } catch (error) {\r\n          set({ \r\n            isLoading: false, \r\n            error: 'Erro ao atualizar licença' \r\n          });\r\n        }\r\n      },\r\n\r\n      getLicenseInfo: () => {\r\n        return get().license;\r\n      },\r\n\r\n      getSessionId: () => {\r\n        const { license } = get();\r\n        return license?.sessionId || null;\r\n      },\r\n\r\n      getClientName: () => {\r\n        const { license } = get();\r\n        return license?.clientName || null;\r\n      }\r\n    }),\r\n    {\r\n      name: 'spr-license-store',\r\n      version: 1,\r\n      migrate: (persistedState: any, version: number) => {\r\n        // Migração para versões futuras\r\n        if (version === 0) {\r\n          // Migrar da versão 0 para 1\r\n          return {\r\n            ...persistedState,\r\n            license: null,\r\n            isActivated: false\r\n          };\r\n        }\r\n        return persistedState;\r\n      }\r\n    }\r\n  )\r\n);\r\n\r\n// Hook para verificar se uma funcionalidade está disponível\r\nexport const useFeatureAccess = (feature: string) => {\r\n  const { validateFeatureAccess } = useLicenseStore();\r\n  return validateFeatureAccess(feature);\r\n};\r\n\r\n// Hook para informações da licença\r\nexport const useLicenseInfo = () => {\r\n  const { license, isActivated, getRemainingDays } = useLicenseStore();\r\n  \r\n  return {\r\n    license,\r\n    isActivated,\r\n    remainingDays: getRemainingDays(),\r\n    isExpired: license ? new Date() > new Date(license.expiresAt || '') : false,\r\n    licenseType: license?.licenseType || 'trial'\r\n  };\r\n}; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}