{"ast":null,"code":"var _jsxFileName = \"/home/cadu/projeto_SPR/frontend/src/components/Common/ConnectivityStatus.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { WifiIcon, ExclamationTriangleIcon, CheckCircleIcon, ArrowPathIcon } from '@heroicons/react/24/outline';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ConnectivityStatus = ({\n  onStatusChange\n}) => {\n  _s();\n  const [isOnline, setIsOnline] = useState(null);\n  const [isChecking, setIsChecking] = useState(false);\n  const [lastCheck, setLastCheck] = useState(null);\n  const API_BASE_URL = process.env.REACT_APP_API_URL || 'http://localhost:3002';\n  const checkConnectivity = async () => {\n    setIsChecking(true);\n    try {\n      const response = await fetch(`${API_BASE_URL}/api/health`, {\n        method: 'GET',\n        mode: 'cors',\n        headers: {\n          'Accept': 'application/json'\n        }\n      });\n      const isConnected = response.ok;\n      setIsOnline(isConnected);\n      setLastCheck(new Date());\n      if (onStatusChange) {\n        onStatusChange(isConnected);\n      }\n      console.log('üîç Status de conectividade:', isConnected ? 'Online' : 'Offline');\n    } catch (error) {\n      console.error('‚ùå Erro ao verificar conectividade:', error);\n      setIsOnline(false);\n      setLastCheck(new Date());\n      if (onStatusChange) {\n        onStatusChange(false);\n      }\n    } finally {\n      setIsChecking(false);\n    }\n  };\n  useEffect(() => {\n    // Verificar conectividade inicial\n    checkConnectivity();\n\n    // Verificar a cada 30 segundos\n    const interval = setInterval(checkConnectivity, 30000);\n    return () => clearInterval(interval);\n  }, []);\n  const getStatusColor = () => {\n    if (isOnline === null) return 'text-gray-400';\n    return isOnline ? 'text-green-600' : 'text-red-600';\n  };\n  const getStatusIcon = () => {\n    if (isChecking) {\n      return /*#__PURE__*/_jsxDEV(ArrowPathIcon, {\n        className: \"w-4 h-4 animate-spin text-blue-600\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 14\n      }, this);\n    }\n    if (isOnline === null) {\n      return /*#__PURE__*/_jsxDEV(WifiIcon, {\n        className: \"w-4 h-4 text-gray-400\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 14\n      }, this);\n    }\n    return isOnline ? /*#__PURE__*/_jsxDEV(CheckCircleIcon, {\n      className: \"w-4 h-4 text-green-600\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this) : /*#__PURE__*/_jsxDEV(ExclamationTriangleIcon, {\n      className: \"w-4 h-4 text-red-600\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this);\n  };\n  const getStatusText = () => {\n    if (isChecking) return 'Verificando...';\n    if (isOnline === null) return 'Verificando conex√£o...';\n    return isOnline ? 'Backend Online' : 'Backend Offline';\n  };\n  const getStatusDescription = () => {\n    if (isOnline === null) return 'Iniciando verifica√ß√£o...';\n    if (isOnline) {\n      return lastCheck ? `√öltima verifica√ß√£o: ${lastCheck.toLocaleTimeString()}` : 'Conectado';\n    }\n    return 'N√£o foi poss√≠vel conectar ao servidor. Verifique se o backend est√° rodando na porta 3002.';\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex items-center space-x-2 text-sm\",\n    children: [getStatusIcon(), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex flex-col\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        className: `font-medium ${getStatusColor()}`,\n        children: getStatusText()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"text-xs text-gray-500\",\n        children: getStatusDescription()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: checkConnectivity,\n      disabled: isChecking,\n      className: \"ml-2 p-1 text-gray-400 hover:text-gray-600 disabled:opacity-50\",\n      title: \"Verificar conectividade\",\n      children: /*#__PURE__*/_jsxDEV(ArrowPathIcon, {\n        className: \"w-3 h-3\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 99,\n    columnNumber: 5\n  }, this);\n};\n_s(ConnectivityStatus, \"LKR1uFusGRVUdo/I+8Vx+/CCL/g=\");\n_c = ConnectivityStatus;\nexport default ConnectivityStatus;\nvar _c;\n$RefreshReg$(_c, \"ConnectivityStatus\");","map":{"version":3,"names":["React","useState","useEffect","WifiIcon","ExclamationTriangleIcon","CheckCircleIcon","ArrowPathIcon","jsxDEV","_jsxDEV","ConnectivityStatus","onStatusChange","_s","isOnline","setIsOnline","isChecking","setIsChecking","lastCheck","setLastCheck","API_BASE_URL","process","env","REACT_APP_API_URL","checkConnectivity","response","fetch","method","mode","headers","isConnected","ok","Date","console","log","error","interval","setInterval","clearInterval","getStatusColor","getStatusIcon","className","fileName","_jsxFileName","lineNumber","columnNumber","getStatusText","getStatusDescription","toLocaleTimeString","children","onClick","disabled","title","_c","$RefreshReg$"],"sources":["/home/cadu/projeto_SPR/frontend/src/components/Common/ConnectivityStatus.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { \r\n  WifiIcon, \r\n  ExclamationTriangleIcon, \r\n  CheckCircleIcon,\r\n  ArrowPathIcon \r\n} from '@heroicons/react/24/outline';\r\n\r\ninterface ConnectivityStatusProps {\r\n  onStatusChange?: (isOnline: boolean) => void;\r\n}\r\n\r\nconst ConnectivityStatus: React.FC<ConnectivityStatusProps> = ({ onStatusChange }) => {\r\n  const [isOnline, setIsOnline] = useState<boolean | null>(null);\r\n  const [isChecking, setIsChecking] = useState(false);\r\n  const [lastCheck, setLastCheck] = useState<Date | null>(null);\r\n\r\n  const API_BASE_URL = process.env.REACT_APP_API_URL || 'http://localhost:3002';\r\n\r\n  const checkConnectivity = async () => {\r\n    setIsChecking(true);\r\n    try {\r\n      const response = await fetch(`${API_BASE_URL}/api/health`, {\r\n        method: 'GET',\r\n        mode: 'cors',\r\n        headers: {\r\n          'Accept': 'application/json',\r\n        },\r\n      });\r\n      \r\n      const isConnected = response.ok;\r\n      setIsOnline(isConnected);\r\n      setLastCheck(new Date());\r\n      \r\n      if (onStatusChange) {\r\n        onStatusChange(isConnected);\r\n      }\r\n      \r\n      console.log('üîç Status de conectividade:', isConnected ? 'Online' : 'Offline');\r\n    } catch (error) {\r\n      console.error('‚ùå Erro ao verificar conectividade:', error);\r\n      setIsOnline(false);\r\n      setLastCheck(new Date());\r\n      \r\n      if (onStatusChange) {\r\n        onStatusChange(false);\r\n      }\r\n    } finally {\r\n      setIsChecking(false);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    // Verificar conectividade inicial\r\n    checkConnectivity();\r\n    \r\n    // Verificar a cada 30 segundos\r\n    const interval = setInterval(checkConnectivity, 30000);\r\n    \r\n    return () => clearInterval(interval);\r\n  }, []);\r\n\r\n  const getStatusColor = () => {\r\n    if (isOnline === null) return 'text-gray-400';\r\n    return isOnline ? 'text-green-600' : 'text-red-600';\r\n  };\r\n\r\n  const getStatusIcon = () => {\r\n    if (isChecking) {\r\n      return <ArrowPathIcon className=\"w-4 h-4 animate-spin text-blue-600\" />;\r\n    }\r\n    \r\n    if (isOnline === null) {\r\n      return <WifiIcon className=\"w-4 h-4 text-gray-400\" />;\r\n    }\r\n    \r\n    return isOnline ? (\r\n      <CheckCircleIcon className=\"w-4 h-4 text-green-600\" />\r\n    ) : (\r\n      <ExclamationTriangleIcon className=\"w-4 h-4 text-red-600\" />\r\n    );\r\n  };\r\n\r\n  const getStatusText = () => {\r\n    if (isChecking) return 'Verificando...';\r\n    if (isOnline === null) return 'Verificando conex√£o...';\r\n    return isOnline ? 'Backend Online' : 'Backend Offline';\r\n  };\r\n\r\n  const getStatusDescription = () => {\r\n    if (isOnline === null) return 'Iniciando verifica√ß√£o...';\r\n    if (isOnline) {\r\n      return lastCheck ? `√öltima verifica√ß√£o: ${lastCheck.toLocaleTimeString()}` : 'Conectado';\r\n    }\r\n    return 'N√£o foi poss√≠vel conectar ao servidor. Verifique se o backend est√° rodando na porta 3002.';\r\n  };\r\n\r\n  return (\r\n    <div className=\"flex items-center space-x-2 text-sm\">\r\n      {getStatusIcon()}\r\n      <div className=\"flex flex-col\">\r\n        <span className={`font-medium ${getStatusColor()}`}>\r\n          {getStatusText()}\r\n        </span>\r\n        <span className=\"text-xs text-gray-500\">\r\n          {getStatusDescription()}\r\n        </span>\r\n      </div>\r\n      <button\r\n        onClick={checkConnectivity}\r\n        disabled={isChecking}\r\n        className=\"ml-2 p-1 text-gray-400 hover:text-gray-600 disabled:opacity-50\"\r\n        title=\"Verificar conectividade\"\r\n      >\r\n        <ArrowPathIcon className=\"w-3 h-3\" />\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ConnectivityStatus; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}